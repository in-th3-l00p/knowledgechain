openapi: 3.0.0
info:
  title: Authentication Microservice API
  description: API for managing authentication, users, and roles
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            username:
              type: string
            roles:
              type: array
              items:
                type: string

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string

    Role:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            type: object
            properties:
              permission:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string

    UserProfile:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              permissions:
                type: array
                items:
                  type: string

paths:
  /api/api/auth/login:
    post:
      summary: Authenticate user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
        '500':
          description: Server error

  /api/auth/refresh-token:
    post:
      summary: Refresh access token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        '401':
          description: Invalid refresh token
        '500':
          description: Server error

  /api/auth/logout:
    post:
      summary: Logout user
      tags: [Authentication]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Successfully logged out
        '500':
          description: Server error

  /api/auth/users/profile:
    get:
      summary: Get user profile
      tags: [Users]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
        '500':
          description: Server error

  /api/auth/roles:
    get:
      summary: Get all roles
      tags: [Roles]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '500':
          description: Server error

    post:
      summary: Create new role
      tags: [Roles]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                permissionIds:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Role created successfully
        '500':
          description: Server error

  /api/auth/roles/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    
    get:
      summary: Get role by ID
      tags: [Roles]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Role details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '404':
          description: Role not found
        '500':
          description: Server error

    put:
      summary: Update role
      tags: [Roles]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                permissionIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Role updated successfully
        '404':
          description: Role not found
        '500':
          description: Server error

    delete:
      summary: Delete role
      tags: [Roles]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Role deleted successfully
        '404':
          description: Role not found
        '500':
          description: Server error
