services:
  postgres:
    image: postgres:latest
    container_name: postgres-dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./rest/auth-service
      dockerfile: Dockerfile.dev
    container_name: auth-service-dev
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:@postgres:5432/auth-service?schema=public
    volumes:
      - ./rest/auth-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network

  user-service:
    build:
      context: ./rest/user-service
      dockerfile: Dockerfile.dev
    container_name: user-service-dev
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:@postgres:5432/user-service?schema=public
    volumes:
      - ./rest/user-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network

volumes:
  postgres-data:

networks:
  backend-network:
    driver: bridge
